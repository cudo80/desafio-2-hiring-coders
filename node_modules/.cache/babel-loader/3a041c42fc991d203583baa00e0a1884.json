{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { clients as dataClients } from 'data/clients';\nimport { products as dataProducts } from 'data/products';\nimport { Item, Money } from 'data/Classes/Order';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState, useMemo } from 'react';\nexport const useData = () => {\n  _s();\n\n  if (!localStorage.getItem('clients')) {\n    localStorage.setItem('clients', JSON.stringify(dataClients));\n  }\n\n  if (!localStorage.getItem('products')) {\n    localStorage.setItem('products', JSON.stringify(dataProducts));\n  } // initialize clients and products\n\n\n  const [clients, setClients] = useState(JSON.parse(localStorage.getItem('clients') || '[]'));\n  const [products, setProducts] = useState(() => {\n    const storagedArr = JSON.parse(localStorage.getItem('products') || '[]');\n    return storagedArr.map(({\n      id,\n      name,\n      unit_amount: unit_number,\n      description,\n      quantity,\n      img,\n      category\n    }) => {\n      const unit_amount = new Money(unit_number);\n      return new Item({\n        id,\n        name,\n        unit_amount: unit_amount,\n        description,\n        quantity,\n        img,\n        category\n      });\n    });\n  });\n  const handlers = useMemo(() => ({\n    getProductsCategories: () => {\n      const categories = products.map(product => product.category).filter((value, index, self) => {\n        return self.indexOf(value) === index;\n      });\n      return categories;\n    },\n    getFilteredProducts: filter => {\n      const products = JSON.parse(localStorage.getItem('products') || '');\n      const filteredProducts = products.filter(product => {\n        return filter.some(filter => filter === product.category);\n      });\n      return filteredProducts;\n    },\n    putNewClient: client => {\n      const clients = JSON.parse(localStorage.getItem('clients') || '');\n      const newClient = { ...client,\n        id: uuidv4()\n      };\n      clients.push(newClient);\n      localStorage.setItem('clients', JSON.stringify(clients));\n      setClients(clients);\n    }\n  }), []);\n  return [clients, products, handlers];\n};\n\n_s(useData, \"QWZWVi2CgLpbq5ePTJqD2PJdnRU=\");","map":{"version":3,"sources":["/Users/Cudo/Desktop/desafio2-hiring-coders/src/data/useData.tsx"],"names":["clients","dataClients","products","dataProducts","Item","Money","v4","uuidv4","useState","useMemo","useData","localStorage","getItem","setItem","JSON","stringify","setClients","parse","setProducts","storagedArr","map","id","name","unit_amount","unit_number","description","quantity","img","category","handlers","getProductsCategories","categories","product","filter","value","index","self","indexOf","getFilteredProducts","filteredProducts","some","putNewClient","client","newClient","push"],"mappings":"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","sourcesContent":["import { clients as dataClients } from 'data/clients';\nimport { products as dataProducts } from 'data/products';\nimport { Item, Money, Client } from 'data/Classes/Order';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState, useMemo } from 'react';\n\nexport const useData = () => {\n  if (!localStorage.getItem('clients')) {\n    localStorage.setItem('clients', JSON.stringify(dataClients));\n  }\n  if (!localStorage.getItem('products')) {\n    localStorage.setItem('products', JSON.stringify(dataProducts));\n  }\n  // initialize clients and products\n  const [clients, setClients] = useState(\n    JSON.parse(localStorage.getItem('clients') || '[]')\n  );\n  const [products, setProducts] = useState(() => {\n    const storagedArr: Array<{\n      id: string;\n      name: string;\n      unit_amount: number;\n      description: string;\n      quantity: number;\n      img: string;\n      category: string;\n    }> = JSON.parse(localStorage.getItem('products') || '[]');\n    return storagedArr.map(\n      ({\n        id,\n        name,\n        unit_amount: unit_number,\n        description,\n        quantity,\n        img,\n        category,\n      }) => {\n        const unit_amount = new Money(unit_number);\n        return new Item({\n          id,\n          name,\n          unit_amount: unit_amount,\n          description,\n          quantity,\n          img,\n          category,\n        });\n      }\n    );\n  });\n\n  const handlers = useMemo(\n    () => ({\n      getProductsCategories: (): Array<string> => {\n        const categories = products\n          .map((product: Item): string => product.category)\n          .filter((value: string, index: number, self: Array<string>) => {\n            return self.indexOf(value) === index;\n          });\n\n        return categories;\n      },\n      getFilteredProducts: (filter: Array<string>) => {\n        const products = JSON.parse(localStorage.getItem('products') || '');\n        const filteredProducts = products.filter((product: Item) => {\n          return filter.some((filter) => filter === product.category);\n        });\n        return filteredProducts;\n      },\n      putNewClient: (client: Client) => {\n        const clients = JSON.parse(localStorage.getItem('clients') || '');\n        const newClient = { ...client, id: uuidv4() };\n        clients.push(newClient);\n        localStorage.setItem('clients', JSON.stringify(clients));\n        setClients(clients);\n      },\n    }),\n    []\n  );\n\n  return [clients, products, handlers] as const;\n};\n"]},"metadata":{},"sourceType":"module"}