{"ast":null,"code":"var _jsxFileName = \"/Users/Cudo/Desktop/desafio2-hiring-coders/src/Components/ClientCard.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Client } from 'data/Classes/Order';\nimport { Address } from 'data/Classes/Order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClientCard = ({\n  putNewClient\n}) => {\n  _s();\n\n  var _formData$date_of_bir;\n\n  const [formData, setFormData] = React.useState(new Client());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    putNewClient(formData);\n    M.toast({\n      html: 'Cliente cadastrado com sucesso'\n    });\n  };\n\n  const handleInputChange = ({\n    type,\n    newValue\n  }) => {\n    setFormData(client => {\n      const newClient = { ...client,\n        [type]: newValue\n      };\n      const {\n        id,\n        full_name,\n        email,\n        phone_number,\n        date_of_birth,\n        addresses\n      } = newClient;\n      return new Client(id, full_name, email, phone_number, date_of_birth, addresses);\n    });\n  };\n\n  const handleAddressChange = ({\n    type,\n    newValue\n  }) => {\n    setFormData(({\n      id,\n      full_name,\n      email,\n      phone_number,\n      date_of_birth,\n      addresses\n    }) => {\n      const address = addresses[0];\n      const newAddress = { ...address,\n        [type]: newValue\n      };\n      const {\n        address_line_1,\n        address_line_2,\n        admin_area_1,\n        admin_area_2,\n        postal_code,\n        country_code\n      } = newAddress;\n      return new Client(id, full_name, email, phone_number, date_of_birth, [new Address(address_line_1, address_line_2, admin_area_1, admin_area_2, postal_code, country_code)]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"col s12\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Dados pessoais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s6\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\",\n          children: \"account_circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.full_name,\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleInputChange({\n            type: 'full_name',\n            newValue: value\n          }),\n          id: \"icon_full_name\",\n          type: \"text\",\n          className: \"validate\",\n          autoComplete: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_full_name\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s6\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\",\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.email,\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleInputChange({\n            type: 'email',\n            newValue: value\n          }),\n          id: \"icon_email\",\n          type: \"email\",\n          className: \"validate\",\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s6\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\",\n          children: \"calendar_today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: (_formData$date_of_bir = formData.date_of_birth) === null || _formData$date_of_bir === void 0 ? void 0 : _formData$date_of_bir.toDateString(),\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleInputChange({\n            type: 'date_of_birth',\n            newValue: value\n          }),\n          id: \"icon_date_of_birth\",\n          type: \"text\",\n          autoComplete: \"bday\",\n          className: \"datepicker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_date_of_birth\",\n          children: \"Data de nascimento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s6\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\",\n          children: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.phone_number,\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleInputChange({\n            type: 'phone_number',\n            newValue: value\n          }),\n          id: \"icon_telephone\",\n          type: \"tel\",\n          className: \"validate\",\n          autoComplete: \"tel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_telephone\",\n          children: \"Telephone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Endereco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s5\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.addresses[0].address_line_1,\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleAddressChange({\n            type: 'address_line_1',\n            newValue: value\n          }),\n          id: \"icon_address_line_1\",\n          type: \"text\",\n          className: \"validate\",\n          autoComplete: \"street-address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_address_line_1\",\n          children: \"Endereco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s3\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.addresses[0].address_line_2,\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleAddressChange({\n            type: 'address_line_2',\n            newValue: value\n          }),\n          id: \"icon_address_line_2\",\n          type: \"text\",\n          className: \"validate\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_address_line_2\",\n          children: \"Complemento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s3\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.addresses[0].postal_code,\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleAddressChange({\n            type: 'postal_code',\n            newValue: value\n          }),\n          id: \"icon_postal_code\",\n          type: \"text\",\n          className: \"validate\",\n          autoComplete: \"postal-code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_postal_code\",\n          children: \"CEP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s4\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.addresses[0].admin_area_2,\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleAddressChange({\n            type: 'admin_area_2',\n            newValue: value\n          }),\n          id: \"icon_admin_area_2\",\n          type: \"text\",\n          className: \"validate\",\n          autoComplete: \"address-level2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_admin_area_2\",\n          children: \"Cidade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s2\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.addresses[0].admin_area_1,\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleAddressChange({\n            type: 'admin_area_1',\n            newValue: value\n          }),\n          id: \"icon_admin_area_1\",\n          type: \"text\",\n          className: \"validate\",\n          autoComplete: \"address-level1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_admin_area_1\",\n          children: \"Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s2\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons prefix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.addresses[0].country_code,\n          onChange: ({\n            target: {\n              value\n            } = {}\n          }) => handleAddressChange({\n            type: 'country_code',\n            newValue: value\n          }),\n          id: \"icon_country_code\",\n          type: \"text\",\n          className: \"validate\",\n          autoComplete: \"country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon_country_code\",\n          children: \"Pais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s3 offset-s1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn waves-effect waves-light\",\n          type: \"submit\",\n          name: \"action\",\n          children: [\"Salvar\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons right\",\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientCard, \"DJw45o0TioCOsAFG7ngtNVGHJG8=\");\n\n_c = ClientCard;\nexport default ClientCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientCard\");","map":{"version":3,"sources":["/Users/Cudo/Desktop/desafio2-hiring-coders/src/Components/ClientCard.tsx"],"names":["React","Client","Address","ClientCard","putNewClient","formData","setFormData","useState","handleSubmit","e","preventDefault","M","toast","html","handleInputChange","type","newValue","client","newClient","id","full_name","email","phone_number","date_of_birth","addresses","handleAddressChange","address","newAddress","address_line_1","address_line_2","admin_area_1","admin_area_2","postal_code","country_code","target","value","toDateString"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Client } from 'data/Classes/Order';\nimport { Address } from 'data/Classes/Order';\n\ninterface ClientCardProps {\n  putNewClient: Function;\n}\n\nconst ClientCard = ({ putNewClient }: ClientCardProps): JSX.Element => {\n  const [formData, setFormData] = React.useState(new Client());\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    putNewClient(formData);\n    M.toast({ html: 'Cliente cadastrado com sucesso' });\n  };\n\n  const handleInputChange = ({\n    type,\n    newValue,\n  }: {\n    type: string;\n    newValue: string | undefined;\n  }) => {\n    setFormData((client: Client) => {\n      const newClient = { ...client, [type]: newValue };\n      const {\n        id,\n        full_name,\n        email,\n        phone_number,\n        date_of_birth,\n        addresses,\n      } = newClient;\n      return new Client(\n        id,\n        full_name,\n        email,\n        phone_number,\n        date_of_birth,\n        addresses\n      );\n    });\n  };\n  const handleAddressChange = ({\n    type,\n    newValue,\n  }: {\n    type: string;\n    newValue: string | undefined;\n  }) => {\n    setFormData(\n      ({\n        id,\n        full_name,\n        email,\n        phone_number,\n        date_of_birth,\n        addresses,\n      }: Client) => {\n        const address = addresses[0];\n        const newAddress = { ...address, [type]: newValue };\n        const {\n          address_line_1,\n          address_line_2,\n          admin_area_1,\n          admin_area_2,\n          postal_code,\n          country_code,\n        } = newAddress;\n        return new Client(id, full_name, email, phone_number, date_of_birth, [\n          new Address(\n            address_line_1,\n            address_line_2,\n            admin_area_1,\n            admin_area_2,\n            postal_code,\n            country_code\n          ),\n        ]);\n      }\n    );\n  };\n\n  return (\n    <form className=\"col s12\" onSubmit={handleSubmit}>\n      <div className=\"center\">\n        <h5>Dados pessoais</h5>\n        <div className=\"input-field col s6\">\n          <i className=\"material-icons prefix\">account_circle</i>\n          <input\n            value={formData.full_name}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) => handleInputChange({ type: 'full_name', newValue: value })}\n            id=\"icon_full_name\"\n            type=\"text\"\n            className=\"validate\"\n            autoComplete=\"name\"\n          />\n          <label htmlFor=\"icon_full_name\">Full Name</label>\n        </div>\n        <div className=\"input-field col s6\">\n          <i className=\"material-icons prefix\">email</i>\n          <input\n            value={formData.email}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) => handleInputChange({ type: 'email', newValue: value })}\n            id=\"icon_email\"\n            type=\"email\"\n            className=\"validate\"\n            autoComplete=\"email\"\n          />\n          <label htmlFor=\"icon_email\">Email</label>\n        </div>\n        <div className=\"input-field col s6\">\n          <i className=\"material-icons prefix\">calendar_today</i>\n          <input\n            value={formData.date_of_birth?.toDateString()}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) => handleInputChange({ type: 'date_of_birth', newValue: value })}\n            id=\"icon_date_of_birth\"\n            type=\"text\"\n            autoComplete=\"bday\"\n            className=\"datepicker\"\n          />\n\n          <label htmlFor=\"icon_date_of_birth\">Data de nascimento</label>\n        </div>\n        <div className=\"input-field col s6\">\n          <i className=\"material-icons prefix\">phone</i>\n          <input\n            value={formData.phone_number}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) => handleInputChange({ type: 'phone_number', newValue: value })}\n            id=\"icon_telephone\"\n            type=\"tel\"\n            className=\"validate\"\n            autoComplete=\"tel\"\n          />\n          <label htmlFor=\"icon_telephone\">Telephone</label>\n        </div>\n        <h5>Endereco</h5>\n        <div className=\"input-field col s5\">\n          <i className=\"material-icons prefix\"></i>\n          <input\n            value={formData.addresses[0].address_line_1}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) =>\n              handleAddressChange({ type: 'address_line_1', newValue: value })\n            }\n            id=\"icon_address_line_1\"\n            type=\"text\"\n            className=\"validate\"\n            autoComplete=\"street-address\"\n          />\n          <label htmlFor=\"icon_address_line_1\">Endereco</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <i className=\"material-icons prefix\"></i>\n          <input\n            value={formData.addresses[0].address_line_2}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) =>\n              handleAddressChange({ type: 'address_line_2', newValue: value })\n            }\n            id=\"icon_address_line_2\"\n            type=\"text\"\n            className=\"validate\"\n            autoComplete=\"off\"\n          />\n          <label htmlFor=\"icon_address_line_2\">Complemento</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <i className=\"material-icons prefix\"></i>\n          <input\n            value={formData.addresses[0].postal_code}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) => handleAddressChange({ type: 'postal_code', newValue: value })}\n            id=\"icon_postal_code\"\n            type=\"text\"\n            className=\"validate\"\n            autoComplete=\"postal-code\"\n          />\n          <label htmlFor=\"icon_postal_code\">CEP</label>\n        </div>\n        <div className=\"input-field col s4\">\n          <i className=\"material-icons prefix\"></i>\n          <input\n            value={formData.addresses[0].admin_area_2}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) =>\n              handleAddressChange({ type: 'admin_area_2', newValue: value })\n            }\n            id=\"icon_admin_area_2\"\n            type=\"text\"\n            className=\"validate\"\n            autoComplete=\"address-level2\"\n          />\n          <label htmlFor=\"icon_admin_area_2\">Cidade</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <i className=\"material-icons prefix\"></i>\n          <input\n            value={formData.addresses[0].admin_area_1}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) =>\n              handleAddressChange({ type: 'admin_area_1', newValue: value })\n            }\n            id=\"icon_admin_area_1\"\n            type=\"text\"\n            className=\"validate\"\n            autoComplete=\"address-level1\"\n          />\n          <label htmlFor=\"icon_admin_area_1\">Estado</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <i className=\"material-icons prefix\"></i>\n          <input\n            value={formData.addresses[0].country_code}\n            onChange={({\n              target: { value } = {},\n            }: {\n              target: { value?: string };\n            }) =>\n              handleAddressChange({ type: 'country_code', newValue: value })\n            }\n            id=\"icon_country_code\"\n            type=\"text\"\n            className=\"validate\"\n            autoComplete=\"country\"\n          />\n          <label htmlFor=\"icon_country_code\">Pais</label>\n        </div>\n        <div className=\"input-field col s3 offset-s1\">\n          <button\n            className=\"btn waves-effect waves-light\"\n            type=\"submit\"\n            name=\"action\"\n          >\n            Salvar\n            <i className=\"material-icons right\">send</i>\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ClientCard;\n"]},"metadata":{},"sourceType":"module"}